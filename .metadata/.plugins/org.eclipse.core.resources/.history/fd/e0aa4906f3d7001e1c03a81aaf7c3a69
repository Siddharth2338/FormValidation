package com.SsnCheck.Controller;

import java.util.Optional;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RestController;

import com.SsnCheck.Entity.SsnEntity;
import com.SsnCheck.Repository.SsnCheckRepository;

@RestController
public class SsnCheckController {
	
	@Autowired
	private SsnCheckRepository repository;
	
	public ResponseEntity<String> checkState(Long ssn){
		
		String stateSsn = "";
		
		Optional<SsnEntity> state = repository.findById(ssn);
		
		if(state.isPresent()) {
			
			BeanUtils.copyProperties(state, stateSsn);
			
			switch (stateSsn) {
			case value: {
				
				yield type;
			}
			default:
				throw new IllegalArgumentException("Ssn Number Not Present: " + stateSsn);
			}
			if(stateSsn.startsWith("1")) {
				
				return new ResponseEntity<String>(stateSsn, HttpStatus.OK);
			}if(stateSsn.startsWith("2")) {
				
				return new ResponseEntity<String>(stateSsn, HttpStatus.OK);
			}if(stateSsn.startsWith("3")) {
				
				return new ResponseEntity<String>(stateSsn, HttpStatus.OK);
			}if(stateSsn.startsWith("4")) {
				
				return new ResponseEntity<String>(stateSsn, HttpStatus.OK);
			}else {
				
				return new ResponseEntity<String>("Ssn Number Not Present", HttpStatus.OK);
			}
		}
		return null;		
	}

}
